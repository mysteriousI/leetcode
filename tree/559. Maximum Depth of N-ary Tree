/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    int maxDepth(Node* root) {
        // 思路：尽管问题变成了一个多分支树，但整体思路与二叉树的最大深度是一样的.     
        if(root == NULL)
            return 0;
        int maxdepth = 1;
        for(int i=0; i<root->children.size(); i++)
        {
            int childdepth = maxDepth(root->children[i]);
            if(maxdepth < childdepth + 1)
                maxdepth = childdepth + 1;
        }
        return maxdepth;
    }
};
