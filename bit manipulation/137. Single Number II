class Solution {
public:
    int singleNumber(vector<int>& nums) {
        // 思路：存在一个针对这类问题的通解，只是对于只出现一次的数字，其他数字都出现两次这个问题特殊的是，这里会出现3次，需要结合一些求余运算而不仅仅是用位运算就能解决。
        int res = 0;
        for(int i=0; i<32; i++) // 将整数按位拆分成32位来分析
        {
            int bitCount = 0;
            for(int j=0; j<nums.size(); j++) // 每个数按当前位统计1的个数
                bitCount += ((nums[j] >> i) & 1);
            if(bitCount%3 != 0) 
                // 如果除3不尽，说明多出来的一位就是要求的数当前位为1
                res += (1 << i);
        }
        return res;
    }
};
