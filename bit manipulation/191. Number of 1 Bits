class Solution {
public:
    int hammingWeight(uint32_t n) {
        
        // 思路1：按位与运算并右移，该思路只适用于正整数或无符号整数
        // int count = 0;
        // while(n > 0)
        // {
        //     if(n & 1)
        //         count++;
        //     n = n >> 1;
        // }
        // return count;
        
        // 思路2：定义与运算数，只有一位是1，每次左移与n进行与运算
        // unsigned int flag = 1; // 只有无符号类型可以通用于负数
        // int count = 0;
        // while(flag)
        // {
        //     if(n & flag)
        //         count++;
        //     flag = flag << 1;
        // }
        // return count;
        
        // 思路3：把n减去1后的数与n进行与运算，这样可以把n右边的1化为0，把1化尽为止循环的次数就是1的个数
        int count=0;
        while(n)
        {
            count++;
            n = (n-1) & n;
        }
        return count;
    }
};
